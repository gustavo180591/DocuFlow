name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

jobs:
  test:
    name: Test and Lint
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:16-alpine
        ports: ['5432:5432']
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: docuflow_test
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s --health-timeout=3s --health-retries=10
    
    env:
      DATABASE_URL: postgresql://postgres:postgres@localhost:5432/docuflow_test
      SHADOW_DATABASE_URL: postgresql://postgres:postgres@localhost:5432/docuflow_test_shadow
      NODE_ENV: test
      CI: true
    
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Node.js
        uses: actions/setup-node@v5
        with:
          node-version: '20'
          cache: 'npm'
      
      - name: Cache node modules
        uses: actions/cache@v3
        id: cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
            **/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node-
      
      - name: Install dependencies
        run: npm ci --prefer-offline
        
      - name: Set up Prisma
        run: npx prisma generate
        
      - name: Run database migrations
        run: npx prisma migrate deploy
        
      - name: Seed test data
        run: npx tsx scripts/seed.ts
        
      - name: Build application
        run: npm run build
        
      - name: Run linter
        run: npm run lint
        
      - name: Run tests
        run: npm test --if-present
        
      - name: Upload test coverage
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage/
          if-no-files-found: warn
          retention-days: 7

  # Add deployment jobs here when ready
  # deploy:
  #   needs: test
  #   runs-on: ubuntu-latest
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - uses: actions/checkout@v4
  #     # Add deployment steps here
